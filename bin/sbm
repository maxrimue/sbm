#!/bin/bash
#Simple binary manager

SBM_PREFIX=${SBM_PREFIX-/usr/local/bin}

install() {
  [ -z "$1" ] && abort "No binary for installation specified"
  cp "$1" "$SBM_PREFIX"
}

remove() {
  [ -z "$1" ] && abort "No binary for removal specified"
  [ -e "$SBM_PREFIX/$1" ] || abort "'$1' isn't an installed binary at '$SBM_PREFIX'"
  rm "$SBM_PREFIX/$1"
}

update() {
  [ -z "$1" ] && abort "No binary for update specified"
  local replacement="$2"
  [ -z "$2" ] && replacement="$1"
  cp "$replacement" "$SBM_PREFIX" || abort "Replacing '$1' in '$SBM_PREFIX' with '$replacement' failed"
}

help() {
  printf "
  \e[1msbm -i|--install <bin>              \e[0mcInstalls binary

  \e[1msbm -rm|--remove <bin>              \e[0mRemoves installed binary

  \e[1msbm -u|--update <bin> (<new bin>)   \e[0mReplaces installed binary with a new one, or, if <new bin> is not specified, replaces installed <bin> by the same named <bin> in the current working directory, if existing.

  \e[1msbm -h|--help                       \e[0mShows this documentation\n\n"
}

abort() {
  printf "\e[31mError:\e[0m %s\n" "$1"
  exit 1
}

[ -z "$1" ] && abort "At least one argument required. Try 'sbm --help' for help"
while test $# -ne 0; do
  case $1 in
    -i|--install) install "$2" ;;
    -rm|--remove) remove "$2" ;;
    -u|--update) update "$2" "$3" ;;
    -h|--help) help ;;
  esac
  shift
done

exit 0
